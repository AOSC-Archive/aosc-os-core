From 832aa1cd04d39c388147b5b4a56da5f431da9d96 Mon Sep 17 00:00:00 2001
From: Huacai Chen <chenhc@lemote.com>
Date: Tue, 12 Dec 2017 08:58:08 +0800
Subject: [PATCH 1/9] Add mfix-loongson3-llsc/mno-fix-loongson3-llsc option

Change md_assemble() to insert sync before "ll" or "lld" instruction.
These options is used to control whether insert "sync" instruction
before "ll" or "lld" instrction. By default, we insert "sync" before
"ll/lld" if we don't use those options.

Test:
Command:$cat Test.s
        ll $t0, 16($sp)
Command:$as -mfix-loongson3-llsc Test.s -o a.out
        [Or Command:$as Test.s -o a.out ]
Command:$objdump -d a.out > Test_obj.s
Command:$cat Test_obj.s
        00000000 <.text>:
           0:   0000000f        sync
           4:   c3a80010        ll      t0,16(sp)

Signed-off-by: Huacai Chen <chenhc@lemote.com>
---
 gas/config/tc-mips.c | 54 ++++++++++++++++++++++++++++++++++++++++++++++++++--
 1 file changed, 52 insertions(+), 2 deletions(-)

diff --git a/gas/config/tc-mips.c b/gas/config/tc-mips.c
index 618de6c6e5..04673d0539 100644
--- a/gas/config/tc-mips.c
+++ b/gas/config/tc-mips.c
@@ -937,6 +937,12 @@ static int mips_fix_rm7000;
 /* ...likewise -mfix-cn63xxp1 */
 static bfd_boolean mips_fix_cn63xxp1;
 
+/* ...likewise -mfix-loongson3-llsc
+ * Default is add sync before ll/lld
+ * So make the default value as one.
+ */
+static bfd_boolean mips_fix_loongson3_llsc = TRUE;
+
 /* We don't relax branches by default, since this causes us to expand
    `la .l2 - .l1' if there's a branch between .l1 and .l2, because we
    fail to compute the offset before expanding the macro to the most
@@ -1475,6 +1481,8 @@ enum options
     OPTION_NO_FIX_24K,
     OPTION_FIX_RM7000,
     OPTION_NO_FIX_RM7000,
+    OPTION_FIX_LOONGSON3_LLSC,
+    OPTION_NO_FIX_LOONGSON3_LLSC,
     OPTION_FIX_LOONGSON2F_JUMP,
     OPTION_NO_FIX_LOONGSON2F_JUMP,
     OPTION_FIX_LOONGSON2F_NOP,
@@ -1597,6 +1605,8 @@ struct option md_longopts[] =
   {"mfix7000", no_argument, NULL, OPTION_M7000_HILO_FIX},
   {"no-fix-7000", no_argument, NULL, OPTION_MNO_7000_HILO_FIX},
   {"mno-fix7000", no_argument, NULL, OPTION_MNO_7000_HILO_FIX},
+  {"mfix-loongson3-llsc",   no_argument, NULL, OPTION_FIX_LOONGSON3_LLSC},
+  {"mno-fix-loongson3-llsc", no_argument, NULL, OPTION_NO_FIX_LOONGSON3_LLSC},
   {"mfix-loongson2f-jump", no_argument, NULL, OPTION_FIX_LOONGSON2F_JUMP},
   {"mno-fix-loongson2f-jump", no_argument, NULL, OPTION_NO_FIX_LOONGSON2F_JUMP},
   {"mfix-loongson2f-nop", no_argument, NULL, OPTION_FIX_LOONGSON2F_NOP},
@@ -4125,9 +4135,40 @@ md_assemble (char *str)
 	    str, insn.insn_opcode));
     }
 
-  if (insn_error.msg)
+  if (insn_error.msg) {
     report_insn_error (str);
-  else if (insn.insn_mo->pinfo == INSN_MACRO)
+    goto out;
+  }
+
+  if (mips_fix_loongson3_llsc == FALSE)
+    {} /*Nothing to Do!*/
+  else
+    {
+    static expressionS bak_imm_expr;
+    static expressionS bak_offset_expr;
+    static bfd_reloc_code_real_type bak_offset_reloc[3] ;
+
+    if ((strcmp (insn.insn_mo->name, "ll") == 0)
+        ||(strcmp (insn.insn_mo->name, "lld") == 0)) {
+           bak_imm_expr = imm_expr;
+           bak_offset_expr = offset_expr;
+
+           bak_offset_reloc[0] = offset_reloc[0];
+           bak_offset_reloc[1] = offset_reloc[1];
+           bak_offset_reloc[2] = offset_reloc[2];
+
+           md_assemble("sync");
+
+           imm_expr = bak_imm_expr;
+           offset_expr = bak_offset_expr;
+
+           offset_reloc[0] = bak_offset_reloc[0];
+           offset_reloc[1] = bak_offset_reloc[1];
+           offset_reloc[2] = bak_offset_reloc[2];
+    }
+  }
+
+  if (insn.insn_mo->pinfo == INSN_MACRO)
     {
       macro_start ();
       if (mips_opts.mips16)
@@ -4144,6 +4185,7 @@ md_assemble (char *str)
 	append_insn (&insn, NULL, unused_reloc, FALSE);
     }
 
+out:
   mips_assembling_insn = FALSE;
 }
 
@@ -14636,6 +14678,14 @@ md_parse_option (int c, const char *arg)
       mips_fix_rm7000 = 0;
       break;
 
+    case OPTION_FIX_LOONGSON3_LLSC:
+      mips_fix_loongson3_llsc = TRUE;
+      break;
+
+    case OPTION_NO_FIX_LOONGSON3_LLSC:
+      mips_fix_loongson3_llsc = FALSE;
+      break;
+
     case OPTION_FIX_LOONGSON2F_JUMP:
       mips_fix_loongson2f_jump = TRUE;
       break;
-- 
2.15.1

