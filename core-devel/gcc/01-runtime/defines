PKGNAME=gcc-runtime
PKGSEC=devel
PKGDEP="glibc"
PKGDES="GNU Compiler Collection (runtime libraries only)"

# The following configuration:
#
# 1. Enables support for C, C++, Fortran, "LTO", ObjC, and ObjC++;
#    a. Mind here, Object C/C++ support is not enabled, we will provide that
#       in the "llvm" package as they provide a higher quality support for them;
#    b. Fortran is needed for many mathematical packages, as well as some audio/
#       video codecs, remove support for fortran if you know what you are doing;
#    c. "LTO" is not really a language, but it enables GCC to use LTO flags, and
#       thus provide respective optimizations later;
#    d. ObjC and ObjC++ is mainly used by the libobjc2 library and what is
#       dependent on it;
# 2. Enables shared libraries for linking
#    (this is probably a good choice to reduce binary sizes of any packages that 
#    links to GCC runtime libraries);
# 3. Enables POSIX style threading;
# 4. Enables linking to system Zlib;
# 5. Disables libunwind support for exception detection;
# 6. Enables GNU style C locales (you probably would not want to change this);
# 7. Disables pre-compiled headers for libstdcxx;
# 8. Disables libssp linking (not needed);
# 9. Enables GNU unique object;
# 10. Enables linker build ID;
# 11. Enables LTO support (as mentioned in note 1, section c);
# 12. Enables isl for Graphite loop optimization;
# 13. Enables plugin support;
# 14. Enables libiberty installation
#     (you may disable "--enable-install-libiberty" if you really feel the urge...);
# 15. Enables GNU style linker hash;
# 16. Disables multilib support 
#     (you may remove "--disable-multilib" to enable the support for it, however
#     you will need a copy of GCC with multilib support to build);
#     a. AOSC OS uses subsystems to provide binary support for foreign architectures.
# 17. Enable release level checking;
# 18. Defaults CXX ABI to C++98 
#     (this is generally a compatibility measure, you may not change this option,
#     which WILL result in binary incompatibility with AOSC OS);
#     #18 is now accepted by GCC 5.2.0 as gcc4-compatible
# 19. Enables support for GNU indirect function 
#     (you may disable this by removing "--enable-gnu-indirect-function");

AUTOTOOLS_AFTER="--prefix=/usr \
                 --libdir=/usr/lib --libexecdir=/usr/lib \
                 --mandir=/usr/share/man --infodir=/usr/share/info \
                 --with-bugurl=https://github.com/AOSC-Dev/aosc-os-core \
                 --enable-languages=c,c++,fortran,lto,objc,obj-c++ \
                 --enable-shared --enable-threads=posix \
                 --with-system-zlib --enable-gnu-indirect-function --enable-__cxa_atexit \
                 --disable-libunwind-exceptions --enable-clocale=gnu \
                 --disable-libstdcxx-pch --disable-libssp \
                 --enable-gnu-unique-object --enable-linker-build-id \
                 --with-isl=/usr \
                 --enable-lto --enable-plugin --enable-install-libiberty \
                 --disable-multilib --disable-werror \
                 --enable-checking=release \
                 --with-default-libstdcxx-abi=gcc4-compatible"

# Cross.
[ "$ARCH" = "*cross*" ] && AUTOTOOLS_AFTER+=" --host=${ARCH_TARGET[$ARCH]} --target=${ARCH_TARGET[$ARCH]}"

# Mips64 is not yet happy with GNU hashing style.
[ "$ARCH" != "mipsn32el" ] && AUTOTOOLS_AFTER+=" --with-linker-hash-style=gnu"

# ARM and AARCH64 specific.
[ "$ARCH" = "arm*" ] && \
    AUTOTOOLS_AFTER+=" --disable-altivec --disable-fixed-point"
[ "$ARCH" = "armel" ] && AUTOTOOLS_AFTER+=" --with-arch=armv7-a --with-float=hard --with-fpu=neon"
[ "$ARCH" = "arm64" ] && AUTOTOOLS_AFTER+=" --with-arch=armv8-a"

ABRPMAUTOPROVONLY=yes
NOLTO=yes
ABSTRIP=no

AB_FLAGS_PIE=0
RECONF=no

PKGBREAK="gcc<=5.2.0-1"
